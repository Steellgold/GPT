import messages from "$resources/messages.json";
import { Lang } from "$core/utils/types";

export function msg(key: keyof typeof messages, params: (string | number | bigint)[] = [], lang: Lang): string {
  if (!lang) throw new Error("Language is not defined.");
  if (lang === "default") lang = "en_US";

  const messageList: Record<string, Record<string, string>> = messages;
  if (!messageList[key]) return key;

  let message = messageList[key][lang];
  const words = message.match(/\{[^}]+\}/g);
  if (words) for (let i = 0; i < words.length; i++) message = message.replace(words[i], String(params[i]));

  message = message.replace(/\\n/g, "\n");

  return message;
}

export function replaces(message: string, params: (string | number | bigint)[] = []): string {
  const words = message.match(/\{[^}]+\}/g);
  if (words) for (let i = 0; i < words.length; i++) message = message.replace(words[i], String(params[i]));

  message = message.replace(/\\n/g, "\n");

  return message;
}

export const langs: Record<string, string> = {
  fr_FR: "ğŸ‡«ğŸ‡· French",
  de_DE: "ğŸ‡©ğŸ‡ª German",
  en_US: "ğŸ‡ºğŸ‡¸ English",
  en_GB: "ğŸ‡¬ğŸ‡§ English (GB)",
  bg_BG: "ğŸ‡§ğŸ‡¬ Bulgarian",
  zh_CN: "ğŸ‡¨ğŸ‡³ Chinese",
  ko_KR: "ğŸ‡°ğŸ‡· Korean",
  da_DK: "ğŸ‡©ğŸ‡° Danish",
  es_ES: "ğŸ‡ªğŸ‡¸ Spanish",
  et_EE: "ğŸ‡ªğŸ‡ª Estonian",
  fi_FI: "ğŸ‡«ğŸ‡® Finnish",
  el_GR: "ğŸ‡¬ğŸ‡· Greek",
  hu_HU: "ğŸ‡­ğŸ‡º Hungarian",
  id_ID: "ğŸ‡®ğŸ‡© Indonesian",
  it_IT: "ğŸ‡®ğŸ‡¹ Italian",
  ja_JP: "ğŸ‡¯ğŸ‡µ Japanese",
  lv_LV: "ğŸ‡±ğŸ‡» Latvian",
  lt_LT: "ğŸ‡±ğŸ‡¹ Lithuanian",
  nl_NL: "ğŸ‡³ğŸ‡± Dutch",
  no_NO: "ğŸ‡³ğŸ‡´ Norwegian",
  pl_PL: "ğŸ‡µğŸ‡± Polish",
  pt_PT: "ğŸ‡µğŸ‡¹ Portuguese",
  ro_RO: "ğŸ‡·ğŸ‡´ Romanian",
  ru_RU: "ğŸ‡·ğŸ‡º Russian",
  uk_UA: "ğŸ‡ºğŸ‡¦ Ukrainian",  
  default: "English"
}